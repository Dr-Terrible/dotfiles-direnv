#!/bin/bash

# This is the directory where all the recipes and ingredients are stored.
# By default, it is an empty string.
# If you want to use a different path, then override the default value with
# and absolute path name which contains a direnv.d/ directory
DIRENVD_DIR=""


# @FUNCTION: concoct
# @INTERNAL
# @DESCRIPTION:
#
concoct() {
	local cmd="${1}"
	local recipe="${DIRENVD_DIR}/direnv.d/recipes/${1}.direnv"

	# Load the required recipe from direnv.d directory
	if [[ ! -r ${recipe} ]]; then
		log_status "Unable to find recipe: ${cmd}!"
	fi
	source ${recipe}
}

# @FUNCTION: require
# @INTERNAL
# @DESCRIPTION:
#
require() {
	local recipe="${1}"
	local cmd="${2}"
	local ingredient="${DIRENVD_DIR}/direnv.d/ingredients/${recipe}/${cmd}.direnv"

	# Load the required ingredient from direnv.d directory
	if [[ ! -r ${ingredient} ]]; then
		log_status "Unable to find ingredient: ${cmd}!"
	fi
	source "${ingredient}"

	# Detect the presence of the specified command
	if ! has ${cmd}; then
		log_status "Unable to find command: ${cmd}!"
		exit 1
	fi

	shift
	shift
	use ${cmd} "$@"
}


# @FUNCTION: include
# @INTERNAL
# @DESCRIPTION:
#
include() {
	if [[ -d ${1} ]]; then
		for file in $( find ${1} -depth -mindepth 1 -type f -iname "*.direnv" ); do
			source "${file}"
		done
	fi
}


# Determine the location of the direnv.d directory
if [[ -z ${DIRENVD_DIR} ]]; then
	local direnvrc="$HOME/.direnvrc"
	if [[ ! -L ${direnvrc} ]]; then
		log_status "${direnvrc} is not a symbolic link!"
		log_status "this Direnv recipe has not been installed by 'bestow'."
		log_status "sorry, I cannot continue. Please, ask upstream for feedbacks:"
		log_status "-  https://github.com/Dr-Terrible/dotfiles-direnv"
		exit 1
	fi

	DIRENVD_DIR="$( readlink ${direnvrc} )"
	DIRENVD_DIR="$( dirname ${DIRENVD_DIR} )"
fi